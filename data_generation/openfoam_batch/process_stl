#!/bin/bash

# Set up some stuff for getopts
OPTIND=1

# Default values
OUTDIR="stl_processed/"
HOMEDIR=$(pwd)
MINH=1100.0
rotation=0
nz=100

usage() { 
    echo -e "Usage: $0 [OPTION] stl_file1 stl_file2 ..."
    echo -e "  -o STL_OUT_DIR\n\tDirectory of processed stl and terrainDict files"
    echo -e "  -r ANGLE\n\tRotate stl by ANGLE"
    echo -e "  -z MINH\n\tMinimum domain height"
    echo -e "  -n nz\n\tNumber of z values"
    echo -e "  -h"
    echo -e "\tprint this help and exit"
    exit 0;
}

while getopts "o:r:z:h" opt; do
    case "$opt" in
        o)  OUTDIR=$OPTARG ;;
        r)  rotation=$OPTARG ;;
        z)  MINH=$OPTARG ;;
        n)  nz=$OPTARG ;;
        h | *)
            usage
            ;;
    esac
done
shift $(expr $OPTIND - 1 )

if [ "$#" -lt 1 ]; then
    echo "ERROR: No stl files supplied"
    usage
fi

# The remaining arguments are the stl files

# Loop over stl files, create new directory for each case
for stl_file in "$@"; do
    basename=$(basename -- "$stl_file")
    extension="${basename##*.}"
    casename="${basename%.*}"
    
    echo "Creating new stl and terrainDict based on ${stl_file}"
    CASEDIR=${OUTDIR}/${casename}
    mkdir -p $CASEDIR

    STLOUT="${CASEDIR}/${casename}.stl"

    # Use python script to generate new stl file (reset origin) and terrainDict
    # Y limits should be only thing printed (bit dodge though...)
    YLIMS=$(python python/stl_terrainDict.py -si ${stl_file} -so ${STLOUT} \
        -do ${CASEDIR}/terrainDict --pad-z 3.0 -mh "$MINH" -nz "$nz" --autograde-z -r "$rotation")
    echo "YLIMS = ${YLIMS}"
    echo $YLIMS > ${CASEDIR}/YLIMS
done

