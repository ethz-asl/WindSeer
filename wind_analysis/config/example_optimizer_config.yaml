optimizer:
    # possible options:
    # 'SimpleStepOptimizer', Adadelta', 'Adagrad', 'Adam', 'Adamax', 'ASGD', 'SGD', 'Ranger', 'RAdam'
    name: 'Adamax'
    kwargs: {'lr': 0.5}

scheduler:
    # Parameter for the step lr scheduler
    step_size: 50
    gamma: 0.5

loss:
    # possible options:
    # 'L1', 'MSE'
    name: 'MSE'

measurements:
    # possible options:
    # 'cfd', 'log'
    type: 'log'

    cfd:
        filename: '/tmp/test.hdf5'
        index: 165
        kwargs: {input_mode: 5,
                 additive_gaussian_noise: True,
                 max_gaussian_noise_std: 0.2,
                 n_turb_fields: 0,
                 max_normalized_turb_scale: 0.0,
                 max_normalized_bias_scale: 0.3,
                 only_z_velocity_bias: False,
                 max_fraction_of_sparse_data: 0.1,
                 min_fraction_of_sparse_data: 0.001,
                 trajectory_min_length: 30,
                 trajectory_max_length: 300,
                 trajectory_min_segment_length: 5,
                 trajectory_max_segment_length: 20,
                 trajectory_step_size: 1.0,
                 trajectory_max_iter: 50,
                 trajectory_start_weighting_mode: 0,
                 trajectory_length_short_focus: False,
                 }

    log:
        filename: 'data/chasseral/20201128_ezg4_chasseral_flight04_fpr_wind.hdf5'
        cosmo_file: 'data/cosmo-1_ethz_ana_const.nc'
        geotiff_file: 'data/chasseral/chasseral.tif'
        filter_window_size: 3001 # filter size of the moving average filter, no filtering if set to 0, must be uneven
        distance_field: True
        use_cosmo_grid: False
        enforce_grid_size: True
        horizontal_overflow: 10 # number of horizontal extra cells to build the distance field
        num_cells: 64
        alt_offset: 200 # offset of the takeoff position for the lower z-bound [m]
        d_horizontal: 1100 # horizontal domain extent [m]
        d_vertical: 700 # vertical domain extent [m]
        t_start:  # Use data from this time onwards from the log file, relative to the first timestamp (deactivated for no or negative values) [s]
        t_end:  # Use data up to this time from the log file, relative to the first timestamp (deactivated for no or negative values) [s]

input_fn:
    # possible options:
    # 'bp_corners_1':
    #     Same boundary layer profile for all corners, optimizing scale and rotation
    # 'bp_corners_4':
    #     Separate boundary layer profile for all corners, optimizing scale and rotation
    # 'bp_corners_1_roughness':
    #     Same boundary layer profile for all corners, optimizing scale, rotation, and roughness
    # 'bp_corners_4_roughness':
    #     Separate boundary layer profile for all corners, optimizing scale, rotation, and roughness
    # 'splines_corner':
    #     Separate spline for each velocity and each corner
    type: 'bp_corners_4_roughness'
    kwargs: {
        # bp_corners_* args
        roughness: 64, # roughness of the boundary layer [n_cells]

        # splines args
        num_control_points: 3,
        uz_zero : True,
    }

run:
    max_iter: 50
    loss_change_threshold: 0.0001
    loss_change_window: 4
    grad_threshold: 0.0001
    verbose: True
    masked_loss: True
