measurements:
    # possible options:
    # 'cfd', 'log'
    type: 'log'

    cfd:
        filename: 'windseer/test/testdata/test_dataset.hdf5'
        index: 0
        kwargs: {input_mode: 5,
                 additive_gaussian_noise: True,
                 max_gaussian_noise_std: 0.0,
                 n_turb_fields: 0,
                 max_normalized_turb_scale: 0.0,
                 max_normalized_bias_scale: 0.0,
                 only_z_velocity_bias: False,
                 max_fraction_of_sparse_data: 0.1,
                 min_fraction_of_sparse_data: 0.001,
                 trajectory_min_length: 10,
                 trajectory_max_length: 50,
                 trajectory_min_segment_length: 5,
                 trajectory_max_segment_length: 20,
                 trajectory_step_size: 1.0,
                 trajectory_max_iter: 50,
                 trajectory_start_weighting_mode: 0,
                 trajectory_length_short_focus: False,
                 }

    log:
        filename: 'windseer/test/testdata/test_hdf5.hdf5'
        cosmo_file: 'windseer/test/testdata/test_cosmo.nc'
        geotiff_file: 'windseer/test/testdata/test_geotiff.tif'
        filter_window_size: 11 # filter size of the moving average filter, no filtering if set to 0, must be uneven
        distance_field: True
        use_cosmo_grid: False
        enforce_grid_size: True
        num_cells: 64
        horizontal_overflow: 10 # number of horizontal extra cells to build the distance field
        alt_offset: 200 # offset of the takeoff position for the lower z-bound [m]
        d_horizontal: 1100 # horizontal domain extent [m]
        d_vertical: 700 # vertical domain extent [m]
        t_start: 0 # Use data from this time onwards from the log file, relative to the first timestamp (deactivated for no or negative values) [s]
        t_end: 1000000 # Use data up to this time from the log file, relative to the first timestamp (deactivated for no or negative values) [s]

loiter_detection:
    target_radius: 100 # expected loiter radius in m
    radius_tolerance: 12 # tolerance of the radius for the fitted circle in m
    max_climb_rate: 1.5 # tolerance on the climb rate in m/s
    error_tolerance: 12 # maximum allowable error for the circle fit to any point along the segment in m
    max_altitude_change: 18 # maximum allowed altitude difference within the loiter [m]
    loiter_threshold: 1.0 # minimum amount of loiters in the segment [-]
    min_window_time: 20 # initial window size in s to check if it is circular
    step: 1 # step size in seconds to extend the segment if it is a loiter
    plot_results: false # show the results of the detected loiter

evaluation:
    # General eval params
    compute_baseline: False
    baseline_method: 'averaging' # 'averaging', 'zero'
    plot_magnitude: True # Plot the horizontal magnitude and direction instead of the north and east component

    # Specific flight path eval params
    # Modes:
    # 0: Single flight, take a window as an input and predict/compare the wind for the rest of the flight along the path
    # 1: Single flight, take a sliding window as an input and predict/compare the wind for the full flight or a small window along the path
    # 2: Single flight, take a sliding window as an input and predict/compare the wind for the full flight or a small window in the binned version
    # 3: Multi flight, take a window as an input and predict/compare the wind for the rest of the flight and to the validation flight
    # 4: Multi flight, take a sliding window as an input and predict/compare the wind for the full flight or a small window along the path for the validation flight
    mode: 0
    t_start: 0 # Use data from this time onwards from the log file, relative to the first timestamp (0 for negative values) [s]
    dt_input: 120 # Window size of the input for the sliding window approach [s]
    dt_pred: 120 # Window size of the prediction for the sliding window approach [s]
    full_flight: False # Indicates if for the sliding window evaluation the flight should be predicted
    cumulative: False # Indicates if for the sliding window evaluation the data from the beginning of the flight up to time t should be used
    validation_file: ['windseer/test/testdata/test_hdf5.hdf5']
    plot_turbulence: false # display the turbulence if it is predicted
    single_figure: True # Put all flights in one figure (only applies to mode 4)

    # Specific loiter eval params
    input_flight: 0 # Use the nth flight as the input
    input_loiter: 0 # Use the ith loiter of the nth input flight
    benchmark: false # loop over all loiters and compare the prediction
    show_plots: true # Display the results
    early_averaging: false # Average the data for one loiter before compiling the network input
    